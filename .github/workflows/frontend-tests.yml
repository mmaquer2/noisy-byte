name: Noisy Bytes Frontend Tests
on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    # Set up Backend
    - name: Setup Node.js for Backend
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './server/package-lock.json'

    - name: Install Backend Dependencies
      working-directory: ./server
      run: npm ci

    - name: Start Backend Server
      working-directory: ./server
      env:
        REDIS_URL: redis://localhost:6379
        NODE_ENV: test
        JWT_SECRET: test-secret
      run: |
        npm run build --if-present
        npm start & # Run in background
        sleep 10 # Wait for backend to start

    # Frontend setup 
    - name: Setup Node.js for Frontend
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './app/package-lock.json'  

    - name: Install Frontend Dependencies
      working-directory: ./app  
      run: npm ci

    - name: Build Frontend
      working-directory: ./app  
      run: npm run build

    - name: Start Frontend
      working-directory: ./app  
      run: |
        npm run preview & # Run in background
        sleep 10 # Wait for frontend to start

    - name: Install Playwright Browsers
      working-directory: ./app  
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      working-directory: ./app 
      run: npx playwright test

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: app/playwright-report/  
        retention-days: 30